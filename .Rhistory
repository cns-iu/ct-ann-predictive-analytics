Links = prep_links,
Nodes = nodes,
Source = "source",
Target = "target",
Value = "value",
NodeID = "name",
units = "occurrences",
fontSize = 15,
nodeWidth = 30,
margin = list("left"=200, "right"=200)
# NodeGroup = c(rep(1,nrow(celltypist)), rep(2,nrow(azimuth)), rep(3,nrow(popv)))
)
# Adding a title to the html page causes the viz to go out of view. No workaround found yet.
library(htmlwidgets)
# library(htmltools)
# sankey_plot <- htmlwidgets::appendContent(sankey_plot, htmltools::tags$p("Sankey plot:\n\nCelltypist predicted annotations - Azimuth predicted annotations - PopV predicted annotations"))
sn <- onRender(
sankey_plot,
'
function(el,x){
// select all our node text
var node_text = d3.select(el)
.selectAll(".node text")
.attr("x", 6 + x.options.nodeWidth)
.attr("text-anchor", "start");
}
'
)
sn <- onRender(
sn,
'
function(el,x){
// select all our node text
d3.select(el)
.selectAll(".node text")
.filter(function(d) { return d.name.endsWith(" "); })
.attr("x", x.options.nodeWidth - 34)
.attr("text-anchor", "end");
}
'
)
sn
all_preds_df <- all_preds_df %>%
select(azimuth_preds, celltypist_preds, popv_preds) %>%
mutate(
celltypist_preds = paste0(celltypist_preds, ' '),
popv_preds = paste0(popv_preds, ''),
)
library(tidyverse)
library(scales) #for scatter graph
library(ggrepel) # to jitter labels
library(networkD3) #for Sankey
library(RColorBrewer) # for plots
library(rio)
# setwd("C:/Users/HP/Desktop/Vikrant/Github_Repositories/ct-ann-predictive-analytics")
all_preds_df <- rio::import("datasets/LCA/all_preds_and_scores.csv")
# all_preds_df <- rio::import("datasets/LCA/all_preds_and_scores_crosswalked.csv")
# Reformat data we we get azimuth | celltypist | popv
# We need two tibbles:
# [NODES] with [NodeId]
# [LINKS] with [Source, Target, Value]
all_preds_df <- all_preds_df %>%
select(azimuth_preds, celltypist_preds, popv_preds) %>%
mutate(
celltypist_preds = paste0(celltypist_preds, ' '),
popv_preds = paste0(popv_preds, ''),
)
azimuth <- all_preds_df %>%
group_by(azimuth_preds) %>% summarize()
celltypist <- all_preds_df %>%
group_by(celltypist_preds) %>% summarize()
popv <-  all_preds_df %>%
group_by(popv_preds) %>% summarize()
azimuth_to_popv <- all_preds_df %>%
group_by(azimuth_preds, popv_preds) %>%
summarize(count=n()) %>%
rename(
source = azimuth_preds,
target = popv_preds,
value = count
)
azimuth_to_celltypist <- all_preds_df %>%
group_by(celltypist_preds, azimuth_preds) %>%
summarize(count=n()) %>%
rename(
source = azimuth_preds,
target = celltypist_preds,
value = count
)
celltypist_to_popv <- all_preds_df %>%
group_by(celltypist_preds, popv_preds) %>%
summarize(count=n()) %>%
rename(
source = celltypist_preds,
target = popv_preds,
value = count
)
unique_name <- list()
# unique_name <- unlist(append(unique_name, c(celltypist, azimuth, popv)))
unique_name <- unlist(append(unique_name, c(celltypist, popv)))
unique_name <- list(unique_name)
nodes <- as.data.frame(tibble(name = character()))
for(u in unique_name){
nodes = nodes %>%
add_row(name=u)
}
nodes$index <- 0:(nrow(nodes)-1)
nodes
# prep_links <- as.data.frame(bind_rows(azimuth_to_celltypist, azimuth_to_popv))
prep_links <- as.data.frame(bind_rows(celltypist_to_popv))
prep_links
# rename node and link tables
names(nodes)[1]<- "source"
prep_links <- left_join(prep_links, nodes,by="source")
names(nodes)[1] <- "target"
prep_links <- left_join(prep_links, nodes,by="target")
prep_links
prep_links <- prep_links[,c(4,5,3)]
names(prep_links)[1:2] <- c("source", "target")
names(nodes)[1] <- "name"
# draw Sankey diagram
sankey_plot <- sankeyNetwork(
Links = prep_links,
Nodes = nodes,
Source = "source",
Target = "target",
Value = "value",
NodeID = "name",
units = "occurrences",
fontSize = 15,
nodeWidth = 30,
margin = list("left"=200, "right"=200)
# NodeGroup = c(rep(1,nrow(celltypist)), rep(2,nrow(azimuth)), rep(3,nrow(popv)))
)
# Adding a title to the html page causes the viz to go out of view. No workaround found yet.
library(htmlwidgets)
# library(htmltools)
# sankey_plot <- htmlwidgets::appendContent(sankey_plot, htmltools::tags$p("Sankey plot:\n\nCelltypist predicted annotations - Azimuth predicted annotations - PopV predicted annotations"))
sn <- onRender(
sankey_plot,
'
function(el,x){
// select all our node text
var node_text = d3.select(el)
.selectAll(".node text")
.attr("x", 6 + x.options.nodeWidth)
.attr("text-anchor", "start");
}
'
)
sn <- onRender(
sn,
'
function(el,x){
// select all our node text
d3.select(el)
.selectAll(".node text")
.filter(function(d) { return d.name.endsWith(" "); })
.attr("x", x.options.nodeWidth - 34)
.attr("text-anchor", "end");
}
'
)
sn
library(tidyverse)
library(scales) #for scatter graph
library(ggrepel) # to jitter labels
library(networkD3) #for Sankey
library(RColorBrewer) # for plots
library(rio)
# setwd("C:/Users/HP/Desktop/Vikrant/Github_Repositories/ct-ann-predictive-analytics")
all_preds_df <- rio::import("datasets/LCA/all_preds_and_scores.csv")
# all_preds_df <- rio::import("datasets/LCA/all_preds_and_scores_crosswalked.csv")
# Reformat data we we get azimuth | celltypist | popv
# We need two tibbles:
# [NODES] with [NodeId]
# [LINKS] with [Source, Target, Value]
all_preds_df <- all_preds_df %>%
select(azimuth_preds, celltypist_preds, popv_preds) %>%
mutate(
celltypist_preds = paste0(celltypist_preds, ' '),
azimuth_preds = paste0(azimuth_preds, ''),
)
azimuth <- all_preds_df %>%
group_by(azimuth_preds) %>% summarize()
celltypist <- all_preds_df %>%
group_by(celltypist_preds) %>% summarize()
popv <-  all_preds_df %>%
group_by(popv_preds) %>% summarize()
azimuth_to_popv <- all_preds_df %>%
group_by(azimuth_preds, popv_preds) %>%
summarize(count=n()) %>%
rename(
source = azimuth_preds,
target = popv_preds,
value = count
)
azimuth_to_celltypist <- all_preds_df %>%
group_by(celltypist_preds, azimuth_preds) %>%
summarize(count=n()) %>%
rename(
source = azimuth_preds,
target = celltypist_preds,
value = count
)
celltypist_to_popv <- all_preds_df %>%
group_by(celltypist_preds, popv_preds) %>%
summarize(count=n()) %>%
rename(
source = celltypist_preds,
target = popv_preds,
value = count
)
unique_name <- list()
# unique_name <- unlist(append(unique_name, c(celltypist, azimuth, popv)))
unique_name <- unlist(append(unique_name, c(azimuth, celltypist)))
unique_name <- list(unique_name)
nodes <- as.data.frame(tibble(name = character()))
for(u in unique_name){
nodes = nodes %>%
add_row(name=u)
}
nodes$index <- 0:(nrow(nodes)-1)
nodes
# prep_links <- as.data.frame(bind_rows(azimuth_to_celltypist, azimuth_to_popv))
prep_links <- as.data.frame(bind_rows(azimuth_to_celltypist))
prep_links
# rename node and link tables
names(nodes)[1]<- "source"
prep_links <- left_join(prep_links, nodes,by="source")
names(nodes)[1] <- "target"
prep_links <- left_join(prep_links, nodes,by="target")
prep_links
prep_links <- prep_links[,c(4,5,3)]
names(prep_links)[1:2] <- c("source", "target")
names(nodes)[1] <- "name"
# draw Sankey diagram
sankey_plot <- sankeyNetwork(
Links = prep_links,
Nodes = nodes,
Source = "source",
Target = "target",
Value = "value",
NodeID = "name",
units = "occurrences",
fontSize = 15,
nodeWidth = 30,
margin = list("left"=200, "right"=200)
# NodeGroup = c(rep(1,nrow(celltypist)), rep(2,nrow(azimuth)), rep(3,nrow(popv)))
)
# Adding a title to the html page causes the viz to go out of view. No workaround found yet.
library(htmlwidgets)
# library(htmltools)
# sankey_plot <- htmlwidgets::appendContent(sankey_plot, htmltools::tags$p("Sankey plot:\n\nCelltypist predicted annotations - Azimuth predicted annotations - PopV predicted annotations"))
sn <- onRender(
sankey_plot,
'
function(el,x){
// select all our node text
var node_text = d3.select(el)
.selectAll(".node text")
.attr("x", 6 + x.options.nodeWidth)
.attr("text-anchor", "start");
}
'
)
sn <- onRender(
sn,
'
function(el,x){
// select all our node text
d3.select(el)
.selectAll(".node text")
.filter(function(d) { return d.name.endsWith(" "); })
.attr("x", x.options.nodeWidth - 34)
.attr("text-anchor", "end");
}
'
)
sn
library(tidyverse)
library(scales) #for scatter graph
library(ggrepel) # to jitter labels
library(networkD3) #for Sankey
library(RColorBrewer) # for plots
library(rio)
# setwd("C:/Users/HP/Desktop/Vikrant/Github_Repositories/ct-ann-predictive-analytics")
all_preds_df <- rio::import("datasets/LCA/all_preds_and_scores.csv")
# all_preds_df <- rio::import("datasets/LCA/all_preds_and_scores_crosswalked.csv")
# Reformat data we we get azimuth | celltypist | popv
# We need two tibbles:
# [NODES] with [NodeId]
# [LINKS] with [Source, Target, Value]
all_preds_df <- all_preds_df %>%
select(azimuth_preds, celltypist_preds, popv_preds) %>%
mutate(
celltypist_preds = paste0(celltypist_preds, ' '),
azimuth_preds = paste0(azimuth_preds, ' '),
)
azimuth <- all_preds_df %>%
group_by(azimuth_preds) %>% summarize()
celltypist <- all_preds_df %>%
group_by(celltypist_preds) %>% summarize()
popv <-  all_preds_df %>%
group_by(popv_preds) %>% summarize()
azimuth_to_popv <- all_preds_df %>%
group_by(azimuth_preds, popv_preds) %>%
summarize(count=n()) %>%
rename(
source = azimuth_preds,
target = popv_preds,
value = count
)
azimuth_to_celltypist <- all_preds_df %>%
group_by(celltypist_preds, azimuth_preds) %>%
summarize(count=n()) %>%
rename(
source = azimuth_preds,
target = celltypist_preds,
value = count
)
celltypist_to_popv <- all_preds_df %>%
group_by(celltypist_preds, popv_preds) %>%
summarize(count=n()) %>%
rename(
source = celltypist_preds,
target = popv_preds,
value = count
)
unique_name <- list()
# unique_name <- unlist(append(unique_name, c(celltypist, azimuth, popv)))
unique_name <- unlist(append(unique_name, c(azimuth, celltypist)))
unique_name <- list(unique_name)
nodes <- as.data.frame(tibble(name = character()))
for(u in unique_name){
nodes = nodes %>%
add_row(name=u)
}
nodes$index <- 0:(nrow(nodes)-1)
nodes
# prep_links <- as.data.frame(bind_rows(azimuth_to_celltypist, azimuth_to_popv))
prep_links <- as.data.frame(bind_rows(azimuth_to_celltypist))
prep_links
# rename node and link tables
names(nodes)[1]<- "source"
prep_links <- left_join(prep_links, nodes,by="source")
names(nodes)[1] <- "target"
prep_links <- left_join(prep_links, nodes,by="target")
prep_links
prep_links <- prep_links[,c(4,5,3)]
names(prep_links)[1:2] <- c("source", "target")
names(nodes)[1] <- "name"
# draw Sankey diagram
sankey_plot <- sankeyNetwork(
Links = prep_links,
Nodes = nodes,
Source = "source",
Target = "target",
Value = "value",
NodeID = "name",
units = "occurrences",
fontSize = 15,
nodeWidth = 30,
margin = list("left"=200, "right"=200)
# NodeGroup = c(rep(1,nrow(celltypist)), rep(2,nrow(azimuth)), rep(3,nrow(popv)))
)
# Adding a title to the html page causes the viz to go out of view. No workaround found yet.
library(htmlwidgets)
# library(htmltools)
# sankey_plot <- htmlwidgets::appendContent(sankey_plot, htmltools::tags$p("Sankey plot:\n\nCelltypist predicted annotations - Azimuth predicted annotations - PopV predicted annotations"))
sn <- onRender(
sankey_plot,
'
function(el,x){
// select all our node text
var node_text = d3.select(el)
.selectAll(".node text")
.attr("x", 6 + x.options.nodeWidth)
.attr("text-anchor", "start");
}
'
)
sn <- onRender(
sn,
'
function(el,x){
// select all our node text
d3.select(el)
.selectAll(".node text")
.filter(function(d) { return d.name.endsWith(" "); })
.attr("x", x.options.nodeWidth - 34)
.attr("text-anchor", "end");
}
'
)
sn
library(tidyverse)
library(scales) #for scatter graph
library(ggrepel) # to jitter labels
library(networkD3) #for Sankey
library(RColorBrewer) # for plots
library(rio)
# setwd("C:/Users/HP/Desktop/Vikrant/Github_Repositories/ct-ann-predictive-analytics")
all_preds_df <- rio::import("datasets/LCA/all_preds_and_scores.csv")
# all_preds_df <- rio::import("datasets/LCA/all_preds_and_scores_crosswalked.csv")
# Reformat data we we get azimuth | celltypist | popv
# We need two tibbles:
# [NODES] with [NodeId]
# [LINKS] with [Source, Target, Value]
all_preds_df <- all_preds_df %>%
select(azimuth_preds, celltypist_preds, popv_preds) %>%
mutate(
celltypist_preds = paste0(celltypist_preds),
azimuth_preds = paste0(azimuth_preds, ' '),
)
azimuth <- all_preds_df %>%
group_by(azimuth_preds) %>% summarize()
celltypist <- all_preds_df %>%
group_by(celltypist_preds) %>% summarize()
popv <-  all_preds_df %>%
group_by(popv_preds) %>% summarize()
azimuth_to_popv <- all_preds_df %>%
group_by(azimuth_preds, popv_preds) %>%
summarize(count=n()) %>%
rename(
source = azimuth_preds,
target = popv_preds,
value = count
)
azimuth_to_celltypist <- all_preds_df %>%
group_by(celltypist_preds, azimuth_preds) %>%
summarize(count=n()) %>%
rename(
source = azimuth_preds,
target = celltypist_preds,
value = count
)
celltypist_to_popv <- all_preds_df %>%
group_by(celltypist_preds, popv_preds) %>%
summarize(count=n()) %>%
rename(
source = celltypist_preds,
target = popv_preds,
value = count
)
unique_name <- list()
# unique_name <- unlist(append(unique_name, c(celltypist, azimuth, popv)))
unique_name <- unlist(append(unique_name, c(azimuth, celltypist)))
unique_name <- list(unique_name)
nodes <- as.data.frame(tibble(name = character()))
for(u in unique_name){
nodes = nodes %>%
add_row(name=u)
}
nodes$index <- 0:(nrow(nodes)-1)
nodes
# prep_links <- as.data.frame(bind_rows(azimuth_to_celltypist, azimuth_to_popv))
prep_links <- as.data.frame(bind_rows(azimuth_to_celltypist))
prep_links
# rename node and link tables
names(nodes)[1]<- "source"
prep_links <- left_join(prep_links, nodes,by="source")
names(nodes)[1] <- "target"
prep_links <- left_join(prep_links, nodes,by="target")
prep_links
prep_links <- prep_links[,c(4,5,3)]
names(prep_links)[1:2] <- c("source", "target")
names(nodes)[1] <- "name"
# draw Sankey diagram
sankey_plot <- sankeyNetwork(
Links = prep_links,
Nodes = nodes,
Source = "source",
Target = "target",
Value = "value",
NodeID = "name",
units = "occurrences",
fontSize = 15,
nodeWidth = 30,
margin = list("left"=200, "right"=200)
# NodeGroup = c(rep(1,nrow(celltypist)), rep(2,nrow(azimuth)), rep(3,nrow(popv)))
)
# Adding a title to the html page causes the viz to go out of view. No workaround found yet.
library(htmlwidgets)
# library(htmltools)
# sankey_plot <- htmlwidgets::appendContent(sankey_plot, htmltools::tags$p("Sankey plot:\n\nCelltypist predicted annotations - Azimuth predicted annotations - PopV predicted annotations"))
sn <- onRender(
sankey_plot,
'
function(el,x){
// select all our node text
var node_text = d3.select(el)
.selectAll(".node text")
.attr("x", 6 + x.options.nodeWidth)
.attr("text-anchor", "start");
}
'
)
sn <- onRender(
sn,
'
function(el,x){
// select all our node text
d3.select(el)
.selectAll(".node text")
.filter(function(d) { return d.name.endsWith(" "); })
.attr("x", x.options.nodeWidth - 34)
.attr("text-anchor", "end");
}
'
)
sn
